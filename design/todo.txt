MVP:
- "error productions" for common errors; ESPECIALLY things that are different from JS
- error handling system for procs
- result monad?
- parsing
    - string escapes
    - destructuring
    - dynamic property definition/access (square brackets)
    - anonymous blocks
- "typeof X" in type expressions
- "typeof X" at runtime (add "array" return value, to avoid Array.isArray(), as well as class-name possibility)
- config file (bagel.config.json)? bagel.config.bgl??
    - allowIOInFunctions
    - allowJSInFunctions
- Fix generic virtual members!!
    - Implement arbitrary named generics for internal use only?
- javascript funcs and procs
- Nominal types
- Named arguments
- convert all tuples in AST to objects?
- Automatically identify redundant checks, comparisons, etc
- Continue trying to better-follow Bagel architecture
- numeric range types? string template literal types?
- suite of type refinements
- optional object-type properties
- alternate number syntaxes like hex?
- array slices?
- tail recursion?

Long-term:
- language server