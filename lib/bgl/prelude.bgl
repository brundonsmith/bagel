
js#
import { iter as ___iter, ___typeof } from 'C:\\Users\\brundolf\\git\\bagel\\lib\\src\\core.ts'
#js

export js proc log(x: unknown) {#
    console.log(x);
#}

export js func logf<T>(x: T): T => {#
   console.log(x);
   return x;
#}

export js func iter<T>(x: const T[]): Iterator<T> => {#
    return ___iter(x)
#}

// export func typeof(val: unknown): 'string'|'number'|'boolean'|'nil'|'object'|'array'|'set'|'class-instance' =>
//     js# ___typeof(val) #js

export type Object = {[string]: unknown}
export type Array = unknown[]

// TODO: flat, includes, find, findIndex, indexOf, lastIndexOf, reduce, reverse

type LintRuleName = string

// TODO: Optional properties
export type BagelConfig = {
    lintRules: {[LintRuleName]: 'error'|'warn'|'off'}?,
    scripts: {[string]: () {}}?,
    platforms: 'all' | ('browser'|'node'|'deno')[]? // restrict standard libraries based on these
}